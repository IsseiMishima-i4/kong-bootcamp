name: Push and Scan GitHub Container Registry Image

on:
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        id: login-ghcr
        run: |
          set -x
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull and Tag Docker image
        run: |
          set -x
          docker pull ${{ vars.REPO_NAME_DOCKER }}:${{ vars.IMAGE_TAG_DOCKER }}
          docker tag ${{ vars.REPO_NAME_DOCKER }}:${{ vars.IMAGE_TAG_DOCKER }} ghcr.io/${{ github.repository_owner }}/${{ vars.REPO_NAME_GHCR }}:${{ vars.IMAGE_TAG_GHCR }}

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ vars.REPO_NAME_GHCR }}:${{ vars.IMAGE_TAG_GHCR }}

      - name: Start GitHub Container Registry image scan (GHCR only supports GitHub Advanced Security scanning)
        run: |
          # GitHub doesn't support image scanning via CLI natively, so you would typically rely on GitHub Advanced Security or external tools like Trivy
          # Here we're just simulating the "scan" with a simple tag-based check
          echo "Simulating image scan..."
          # For real image scanning, consider integrating Trivy or another scanning tool
          sleep 10  # Placeholder for actual scan

      - name: Check scan results (simulated)
        run: |
          # Simulated scan result
          echo "No critical vulnerabilities found." > scan-results.json
          cat scan-results.json

      - name: Upload scan results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: scan-results.json
