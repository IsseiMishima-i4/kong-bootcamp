name: Push and Scan ARM64 Image to GHCR

on:
  workflow_dispatch:

env:
  REPO_NAME_DOCKER: kong/kong-gateway
  IMAGE_TAG_DOCKER: 3.4.3.18
  REPO_NAME_GHCR: kong-gateway
  IMAGE_TAG_GHCR: 3.4.3.18

jobs:
  build-and-scan-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Pull ARM64 Docker image
        run: |
          docker pull --platform linux/arm64 ${{ env.REPO_NAME_DOCKER }}:${{ env.IMAGE_TAG_DOCKER }}
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker tag ${{ env.REPO_NAME_DOCKER }}:${{ env.IMAGE_TAG_DOCKER }} ghcr.io/$REPO_OWNER_LOWER/${{ env.REPO_NAME_GHCR }}:${{ env.IMAGE_TAG_GHCR }}

      - name: Push ARM64 image to GHCR
        run: |
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/$REPO_OWNER_LOWER/${{ env.REPO_NAME_GHCR }}:${{ env.IMAGE_TAG_GHCR }}

      - name: Wait for GHCR scan (optional, for reliability)
        run: sleep 30

      - name: Download and install GitHub CLI
        run: |
          type -p gh || (sudo apt-get update && sudo apt-get install -y gh jq)

      - name: Get scan results from GHCR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_VERSION="${{ env.IMAGE_TAG_GHCR }}-arm64"

          # Get the list of image versions for the container package
          gh api -H "Accept: application/vnd.github+json" \
            /users/${{ github.repository_owner }}/packages/container/${{ env.REPO_NAME_GHCR }}/versions \
            > ghcr_versions.json

          VERSION_ID=$(jq -r --arg tag "$IMAGE_VERSION" '.[] | select(.metadata.container.tags[] == $tag) | .id' ghcr_versions.json)
          if [ -z "$VERSION_ID" ]; then
            echo "Image version not found in GHCR"
            exit 1
          fi

          # Get the security advisories (scan results)
          gh api -H "Accept: application/vnd.github+json" \
            /users/${{ github.repository_owner }}/packages/container/${{ env.REPO_NAME_GHCR }}/versions/$VERSION_ID/security-advisories \
            > image-scan-report.json
          cat image-scan-report.json

      - name: Upload scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-scan-report
          path: image-scan-report.json
